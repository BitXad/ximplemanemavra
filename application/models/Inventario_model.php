<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Inventario_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get inventario
     */
    function get_inventario()
    {
        $sql = "select  p.*,c.categoria_nombre FROM inventario p
                left join categoria_producto c on c.categoria_id = p.categoria_id
                where p.estado_id = 1
                group by p.categoria_id, p.producto_id order by c.categoria_nombre, p.producto_nombre asc";

        $producto = $this->db->query($sql)->result_array();
        
        //$producto = $this->db->query($sql,array('credito_id'))->row_array();
        return $producto;
    }
    /*
     * Get inventario
     */
    function get_inventario_bloque()
    {
        
        $sql = "select p.* from inventario p
                where p.estado_id=1 and p.producto_id between 1 and 10 
                group by p.producto_id
                order by p.producto_nombre asc";
        $producto = $this->db->query($sql)->result_array();
        
        return $producto;
    }

    function get_inventario_codigo($codigo)
    {
        $sql = "select 1 as tipo, p.* from inventario p where p.estado_id = 1 and p.producto_codigobarra='".$codigo."' 
              group by p.producto_id
              order by p.producto_nombre";
       
        $producto = $this->db->query($sql)->result_array();

        return $producto;
    }


    function get_inventario_codigo_factor($codigo)
    {
        $sql = "select 2 as tipo, p.* from inventario p where p.estado_id = 1 and ("
                . "p.producto_codigofactor='".$codigo."'" 
                . "or p.producto_codigofactor1='".$codigo."'" 
                . "or p.producto_codigofactor2='".$codigo."'" 
                . "or p.producto_codigofactor3='".$codigo."'" 
                . "or p.producto_codigofactor4='".$codigo."'" 
                . ")
              group by p.producto_id
              order by p.producto_nombre";
       
        $producto = $this->db->query($sql)->result_array();

        return $producto;
    }
    
    
    function get_inventario_parametro($parametro)
    {
        
        $sql = "select  p.*,c.categoria_nombre FROM inventario p
                left join categoria_producto c on c.categoria_id = p.categoria_id
                WHERE p.estado_id=1 and p.producto_nombre like '%".$parametro."%' or p.producto_codigobarra like '%".$parametro."%' or p.producto_codigo like '%".$parametro."%'
                GROUP BY p.categoria_id, p.producto_id
                ORDER By c.categoria_nombre, p.producto_nombre asc";
        
        $producto = $this->db->query($sql)->result_array();
        return $producto;

    }

    function get_inventario_categoria($parametro)
    {
        $sql = " select i.* from inventario i where i.estado_id = 1 and i.categoria_id = ".$parametro.
               " group by i.producto_id order by i.producto_id";
  
        $producto = $this->db->query($sql)->result_array();
        return $producto;

    }

    function get_inventario_subcategoria($parametro)
    {
        $sql = " select i.* from inventario i where i.estado_id = 1 and i.subcategoria_id = ".$parametro.
               " group by i.producto_id order by i.producto_nombre";
  
        $producto = $this->db->query($sql)->result_array();
        return $producto;

    }

    /*
     * Get presentacion
     */
    function get_presentacion()
    {
        $sql = "select * from presentacion order by p.producto_nombre";
        $presentacion = $this->db->query($sql)->result_array();
        return $presentacion;
    }
    
//********************************//    
    /*
     * Get producto by producto_id
     */
    function get_producto($producto_id)
    {
        $producto = $this->db->query("
            SELECT
                *

            FROM
                `producto`

            WHERE
                `producto_id` = ?
        ",array($producto_id))->row_array();

        return $producto;
    }
    /*
     * actualizar inventario
     */
    function actualizar_inventario()
    {
        //Truncar la tabla inventario
        $sql = "truncate inventario";
        $this->db->query($sql);
        
        $sql = "insert into inventario (select * from consinventario where estado_id = 1)";
        
        $this->db->query($sql);
        return true;
    }
    
    /*
     * actualizar inventario
     */
    function actualizar_producto_inventario($producto_id)
    {
        //Truncar la tabla inventario
        $sql = "delete from inventario where producto_id = ".$producto_id;
        $this->db->query($sql);
        
        $sql = "insert into inventario
                (select p.*
                 from consinventario p  
                where p.producto_id = ".$producto_id.")";
        
        $this->db->query($sql);
        return true;
    }
    
    /*
     * 
     * actualizar el valor de un producto en la tabla inventario
     */
    function actualizar_cantidad_producto($producto_id)
    {
        $sql = "update inventario set existencia = 
                (select c.existencia from consinventario c where c.producto_id = ".$producto_id.")";        
        $this->db->query($sql);
        return true;
    }
    
    /*
     * ingresa los datos de un producto al inventario
     */
    function ingresar_producto_inventario($producto_id)
    {
        //Truncar la tabla inventario
        $sql = "delete from inventario where producto_id = ".$producto_id;
        $this->db->query($sql);
        
        
        //cargar el inventario actualizado
        $sql = "insert into inventario
                (select p.*,0 as compras, 0 as ventas, 0 as pedidos, 0 as existencia,
                m.moneda_descripcion as moneda_descripcion, m.moneda_tc as moneda_tc
                from producto p 
                left join moneda m on p.moneda_id = m.moneda_id
                where p.producto_id = ".$producto_id.")";

        $this->db->query($sql);
        return true;
    }

    function ingresar_producto_a_inventario($producto_id,$existencia)
    {
        //Truncar la tabla inventario
        $sql = "delete from inventario where producto_id = ".$producto_id;
        $this->db->query($sql);
        
        
        //cargar el inventario actualizado
        $sql = "insert into inventario
                (select p.*,".$existencia." as compras, 0 as ventas, 0 as pedidos, ".$existencia." as existencia,
                    m.moneda_descripcion as moneda_descripcion, m.moneda_tc as moneda_tc
                from producto p 
                left join moneda m on p.moneda_id = m.moneda_id
                where p.producto_id = ".$producto_id.")";

        $this->db->query($sql);
        return true;
    }

    /*
     * actualizar las cantidades del inventario
     */
    function actualizar_cantidad_inventario()
    {        
        
        //cargar el inventario actualizado
        $sql = "update inventario i, consinventario p
                set
                    i.compras = p.compras,
                    i.ventas = p.ventas,
                    i.pedidos = p.pedidos
                where i.producto_id = p.producto_id and  p.estado_id = 1";
        
        $this->db->query($sql);
        return true;
    }
 function rebajar_cantidad_producto($producto_id,$existencia)
    {

         //Truncar la tabla inventario
       
        //cargar el inventario actualizado
        $sql = "update inventario set inventario.existencia=inventario.existencia-".$existencia." where producto_id=".$producto_id."";

        $this->db->query($sql);
    }
 function aumentar_cantidad_producto($producto_id,$existencia,$ultimocosto,$producto_precio)
    {
       
        //cargar el inventario actualizado
        $sql = "update inventario set inventario.producto_precio=".$producto_precio.", inventario.producto_ultimocosto=".$ultimocosto.", inventario.existencia=inventario.existencia+".$existencia." where producto_id=".$producto_id."";

        $this->db->query($sql);
    }
    
    /*
     * Get all inventario count
     */
    function get_all_inventario_count()
    {
        $inventario = $this->db->query("
            SELECT
                count(*) as count

            FROM
                `inventario`
        ")->row_array();

        return $inventario['count'];
    }
        
    /*
     * Get all inventario
     */
    function get_all_inventario($params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $inventario = $this->db->query("
            SELECT
                *

            FROM
                `inventario`

            WHERE
                1 = 1

            ORDER BY `producto_nombre`

            " . $limit_condition . "
        ")->result_array();

        return $inventario;
    }
        
    /*
     * function to add new inventario
     */
    function add_inventario($params)
    {
        $this->db->insert('inventario',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update inventario
     */
    function update_inventario($producto_id,$params)
    {
        $this->db->where('producto_id',$producto_id);
        return $this->db->update('inventario',$params);
    }
    
    /*
     * function to delete inventario
     */
    function delete_inventario($producto_id)
    {
        return $this->db->delete('inventario',array('producto_id'=>$producto_id));
    }
    
    function get_inventario_coti($parametro)
    {
        $sql = "SELECT i.* FROM inventario i
              WHERE i.estado_id=1 and (i.producto_nombre like '%".$parametro."%' or i.producto_codigobarra like '%".$parametro."%'
                  or producto_codigo like '%".$parametro."%')
                  
              GROUP BY
                i.producto_id
              ORDER By i.producto_nombre asc";
  
        $producto = $this->db->query($sql)->result_array();
        return $producto;

    }   
    
    function reducir_inventario($cant,$producto_id){
        $sql = "update inventario set existencia = existencia - ".$cant.
               " where producto_id = ".$producto_id;
        $this->db->query($sql);
        return true;
    }

    function incrementar_inventario($cant,$producto_id){
        $sql = "update inventario set existencia = existencia + ".$cant.
               " where producto_id = ".$producto_id;
        $this->db->query($sql);
        return true;
    }
    
    function reducir_inventario_aux($usuario_id){
        $sql = "update inventario i, detalle_venta_aux d set".
               " i.existencia = i.existencia - d.detalleven_cantidad ".
               " where i.producto_id = d.producto_id and d.usuario_id = ".$usuario_id.
               "  ";
        $this->db->query($sql);
        return true;
    }    
    
    
    function mostrar_kardex($desde, $hasta, $producto_id){
        
        $desde ='1900-01-01';
        $sql = "select * from
                (
                select 
                  c.compra_fecha as fecha,
                  c.compra_id as num_ingreso,
                  d.detallecomp_cantidad as unidad_comp,
                  d.detallecomp_costo as costoc_unit,
                  d.detallecomp_subtotal as importe_ingreso,
                  0 as num_salida,
                  0 as unidad_vend,
                  0 as costov_unit,
                  0 as importe_salida,
                  c.compra_hora as hora,
                  '' as detalleobs,
                  d.detallecomp_tc as tipo_cambio,
                  d.detallecomp_id as id, '' as cliente_nombre
                from
                  compra c,
                  detalle_compra d
                where
                  d.producto_id = ".$producto_id." and 
                  c.compra_id = d.compra_id and 
                  c.compra_fecha >= '".$desde."' and 
                  c.compra_fecha <= '".$hasta."'
                  

                union

                select 
                  v.venta_fecha as fecha,
                  0 as num_ingreso,
                  0 as unidad_comp,
                  0 as costoc_unit,
                  0 as importe_ingreso,
                  v.venta_id as num_salida,
                  t.detalleven_cantidad as unidad_vend,
                  t.detalleven_costo as costov_unit,
                  t.detalleven_subtotal as importe_salida,
                  v.venta_hora as hora,
                  '' as detalleobs,
                  t.detalleven_tc as tipo_cambio,
                  t.detalleven_id as id, 
                  c.cliente_nombre
                from
                  venta v,
                  detalle_venta t,
                  cliente c
                where
                c.cliente_id = v.cliente_id and
                  t.producto_id = ".$producto_id." and 
                  v.venta_id = t.venta_id and 
                  v.venta_fecha >= '".$desde."' and 
                  v.venta_fecha <= '".$hasta."'
                  
                union
                
                select 
                  ds.detalleserv_fechaterminado as fecha,
                  0 as num_ingreso,
                  0 as unidad_comp,
                  0 as costoc_unit,
                  0 as importe_ingreso,
                  ds.detalleserv_id as num_salida,
                  t.detalleven_cantidad as unidad_vend,
                  t.detalleven_costo as costov_unit,
                  t.detalleven_subtotal as importe_salida,
                  ds.detalleserv_horaterminado as hora,
                  concat('SERV. TECNICO N° ', ds.servicio_id) as detalleobs,
                  t.detalleven_tc as tipo_cambio,
                  t.detalleven_id as id, '' as cliente_nombre
                from
                  detalle_serv ds,
                  detalle_venta t
                where
                  t.producto_id = ".$producto_id." and 
                  ds.detalleserv_id = t.detalleserv_id and 
                  ds.detalleserv_fechaterminado >= '".$desde."' and 
                  ds.detalleserv_fechaterminado <= '".$hasta."'
                  ) as tx

                  order by fecha, hora";
 
        $kardex = $this->db->query($sql)->result_array();
        return $kardex;
    }    
    
    
    function mostrar_compras($producto_id){

        $sql = "SELECT 
                c.compra_fecha AS fecha,
                c.compra_id AS num_ingreso,
                d.detallecomp_cantidad,
                d.detallecomp_costo,
                d.detallecomp_subtotal,
                d.detallecomp_total,
                c.compra_hora AS hora,
                concat(c.compra_fecha,' ',c.compra_hora) as fechacompra

              FROM
                compra c,
                detalle_compra d
              WHERE
                d.producto_id = ".$producto_id." AND 
                c.compra_id = d.compra_id

              ORDER BY
                fechacompra DESC";
 
        $kardex = $this->db->query($sql)->result_array();
        return $kardex;
    }    
    
    function mostrar_duplicados_inventario(){
        
        $sql = "select x.* 
                from inventario x

                where                 
                x.estado_id = 1 and
                x.producto_codigobarra <> '-' and
                x.producto_codigobarra <> '' and
                (select count(*) from producto y where y.producto_codigobarra = x.producto_codigobarra and y.estado_id = 1)>=2

                order by x.producto_codigobarra";
        
        $duplicados = $this->db->query($sql)->result_array();
        return $duplicados;
    }
    
    /* Get producto by producto_id from Inventario */
    function get_productoinventario($producto_id)
    {
        $producto = $this->db->query("
            SELECT
                *

            FROM
                `inventario`

            WHERE
                `producto_id` = ?
        ",array($producto_id))->row_array();

        return $producto;
    }
    
    function get_inventario_total(){
        $sql = "select count(*) as cantidad, (i.producto_costo * i.existencia) as total_inventario from inventario i";
        $resultado = $this->db->query($sql)->row_array();
        return $resultado;

    }

    function get_inventario_existencia()
    {
        $sql = "select  p.*,c.categoria_nombre FROM inventario p
                left join categoria_producto c on c.categoria_id = p.categoria_id
                where p.estado_id = 1 and p.existencia>0
                group by p.categoria_id, p.producto_id order by c.categoria_nombre, p.producto_nombre asc";

        $producto = $this->db->query($sql)->result_array();
        
        //$producto = $this->db->query($sql,array('credito_id'))->row_array();
        return $producto;
    }
    
    function get_inventario_parametro_existencia($parametro)
    {
        
        $sql = "select  p.*,c.categoria_nombre FROM inventario p
                left join categoria_producto c on c.categoria_id = p.categoria_id
                WHERE p.estado_id=1 and p.existencia>0 and p.producto_nombre like '%".$parametro."%' or p.producto_codigobarra like '%".$parametro."%' or p.producto_codigo like '%".$parametro."%'
                GROUP BY p.categoria_id, p.producto_id
                ORDER By c.categoria_nombre, p.producto_nombre asc";
        
        $producto = $this->db->query($sql)->result_array();
        return $producto;

    }
    
    function consultar($sql)
    {        
        $resultado = $this->db->query($sql)->result_array();
        return $resultado;
    }
    /* obtiene productos de detalle venta aux... es decir de ventas no finalizadas  */
    function mostrar_productoventa_aux($producto_id)
    {
        $sql = "SELECT
                    dv.venta_id, dv.`detalleven_cantidad`,
                    dv.`producto_nombre`, u.usuario_nombre
                FROM
                    detalle_venta_aux dv
                left join usuario u on dv.usuario_id = u.usuario_id
                WHERE dv.producto_id = $producto_id";

        $producto = $this->db->query($sql)->result_array();
        return $producto;
    }
    /* obtiene prouctos de detalle pedido... pero de pedidos no consolidados  */
    function mostrar_pedido_noconsolidado($producto_id)
    {
        $sql = "SELECT
                    p.pedido_id, dp.`detalleped_cantidad`,
                    dp.`detalleped_nombre`, u.usuario_nombre
                FROM
                    detalle_pedido dp
                left join `pedido` p on dp.pedido_id = p.pedido_id
                left join usuario u on p.usuario_id = u.usuario_id
                WHERE p.`estado_id` = 11 and
                      dp.producto_id = $producto_id";

        $producto = $this->db->query($sql)->result_array();
        return $producto;
    }
    /* reduce de inventario atravez de: detalle formula_aux; se usa en producción */
    function reducir_inventario_formula_aux($usuario_id){
        $sql = "update inventario i, detalle_formula_aux d set".
               " i.existencia = i.existencia - d.detalleven_cantidad ".
               " where i.producto_id = d.producto_id and d.usuario_id = ".$usuario_id.
               "  ";
        $this->db->query($sql);
        return true;
    }
    /* obtiene productos con existencia mayores o menores a 0  */
    function get_inventario_conexistencia()
    {
        $sql = "SELECT i.* FROM inventario i
              WHERE
                  i.existencia > 0 or
                  i.existencia < 0
              ORDER By i.producto_nombre asc";
        $producto = $this->db->query($sql)->result_array();
        return $producto;
    }
    /*
     * Get inventariofisico valorado +produccion
     */
    function getinventario_fvalorado($desde, $hasta)
    {
        $inicio ='1900-01-01';
        $sql = "select p.*,c.categoria_nombre, d_prod.cantidad, d_compradetalle.cantidad_compra,
                       `d_ventam`.cantidad_mantenimiento, d_ventam.total_ventamantenimiento,
                       d_ventap.cantidad_proyecto, d_ventap.total_ventaproyecto,
		       d_ventaparque.cantidad_parque, d_ventaparque.total_ventaparque,
                       d_ventaventas.cantidad_venta, d_ventaventas.total_ventavarios,
                       d_ventatraspaso.cantidad_traspaso, d_ventatraspaso.total_ventatraspaso,
                       d_ventamortandad.cantidad_mortandad, d_ventamortandad.total_ventamortandad,
                       d_produccionperdida.cantidad_perdida,
                       d_compradetalleant.cantidad_compraant, d_ventadetalleant.cantidad_ventaant
                FROM inventario p
                left join categoria_producto c on c.categoria_id = p.categoria_id
                left join (select
                                sum(dp.detproduccion_cantidad) as cantidad, dp.producto_id as prod_id
                           from detalle_produccion dp
                           left join produccion pr on dp.`produccion_id` = pr.produccion_id
                           where `dp`.`estado_id` = 34
                           group by dp.`producto_id`) as d_prod on p.producto_id = d_prod.prod_id
                left join (select
                	         sum(dc.detallecomp_cantidad) as cantidad_compra, dc.producto_id as producto_idcompra
                           from detalle_compra dc
                           left join compra c on dc.`compra_id` = c.compra_id
                           where
                           	c.compra_fecha >= '".$desde."' and 
               			c.compra_fecha <= '".$hasta."'
                           group by dc.`producto_id`) as d_compradetalle on p.producto_id = d_compradetalle.producto_idcompra
                left join (select sum(d.detalleven_cantidad) as cantidad_mantenimiento, c.`cliente_nombre`, d.producto_id as dv_prodid,
                                  sum(d.detalleven_total) as total_ventamantenimiento
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'MANTENIMIENTO' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventam on p.producto_id = `d_ventam`.dv_prodid
                left join (select sum(d.detalleven_cantidad) as cantidad_proyecto, c.`cliente_nombre`, d.producto_id as dv_prodidproy,
                                  sum(d.detalleven_total) as total_ventaproyecto
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'PROYECTOS' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventap on p.producto_id = d_ventap.dv_prodidproy
                left join (select sum(d.detalleven_cantidad) as cantidad_parque, c.`cliente_nombre`, d.producto_id as producto_idparque,
                                  sum(d.detalleven_total) as total_ventaparque
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'PARQUES' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventaparque on p.producto_id = d_ventaparque.producto_idparque
                left join (select sum(d.detalleven_cantidad) as cantidad_venta, c.`cliente_nombre`, d.producto_id as producto_idventa,
                                  sum(d.detalleven_total) as total_ventavarios
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where not
                                  (c.cliente_nombre = 'MANTENIMIENTO' or
                                  c.cliente_nombre = 'PROYECTOS' or
                                  c.cliente_nombre = 'PARQUES' or
                                  c.cliente_nombre = 'MORTANDAD' or
                                  c.cliente_nombre = 'PARQUE ESCUELA') and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventaventas on p.producto_id = d_ventaventas.producto_idventa
                left join (select sum(d.detalleven_cantidad) as cantidad_mortandad, c.`cliente_nombre`, d.producto_id as producto_idmortandad,
                                  sum(d.detalleven_total) as total_ventamortandad
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'MORTANDAD' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventamortandad on p.producto_id = d_ventamortandad.producto_idmortandad
                left join (select sum(d.detalleven_cantidad) as cantidad_traspaso, c.`cliente_nombre`, d.producto_id as producto_idtraspaso,
                                  sum(d.detalleven_total) as total_ventatraspaso
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'PARQUE ESCUELA' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventatraspaso on p.producto_id = d_ventatraspaso.producto_idtraspaso
                left join (select sum(per.perdida_cantidad) as cantidad_perdida, dp.producto_id as producto_idperdida
                           from `perdida` per
                           left join `detalle_produccion` dp on per.detproduccion_id = dp.`detproduccion_id`
                           left join producto pro on dp.`producto_id` = `pro`.`producto_id`
                           group by dp.producto_id) as d_produccionperdida on p.producto_id = d_produccionperdida.producto_idperdida
                left join (select
                                sum(dc.detallecomp_cantidad) as cantidad_compraant, dc.producto_id as producto_idcompraant
                           from detalle_compra dc
                           left join compra c on dc.`compra_id` = c.compra_id
                           where
                                c.compra_fecha >= '".$inicio."' and 
                                c.compra_fecha < '".$desde."'
                           group by dc.`producto_id`) as d_compradetalleant on p.producto_id = d_compradetalleant.producto_idcompraant
                left join (select sum(d.detalleven_cantidad) as cantidad_ventaant, d.producto_id as producto_idventaant
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           where
                                v.venta_fecha >= '".$inicio."' and 
                                v.venta_fecha < '".$desde."'
                           group by d.producto_id) as d_ventadetalleant on p.producto_id = `d_ventadetalleant`.producto_idventaant
                where p.estado_id = 1
                group by p.categoria_id, p.producto_id order by c.categoria_nombre, p.producto_nombre asc";

        $producto = $this->db->query($sql)->result_array();
        
        return $producto;
    }
    
    function get_inventario_fvaloradoparametro($desde, $hasta, $parametro)
    {
        $inicio ='1900-01-01';
        $sql = "select p.*,c.categoria_nombre, d_prod.cantidad, d_compradetalle.cantidad_compra,
                       `d_ventam`.cantidad_mantenimiento, d_ventam.total_ventamantenimiento,
                       d_ventap.cantidad_proyecto, d_ventap.total_ventaproyecto,
		       d_ventaparque.cantidad_parque, d_ventaparque.total_ventaparque,
                       d_ventaventas.cantidad_venta, d_ventaventas.total_ventavarios,
                       d_ventatraspaso.cantidad_traspaso, d_ventatraspaso.total_ventatraspaso,
                       d_ventamortandad.cantidad_mortandad, d_ventamortandad.total_ventamortandad,
                       d_produccionperdida.cantidad_perdida,
                       d_compradetalleant.cantidad_compraant, d_ventadetalleant.cantidad_ventaant
                FROM inventario p
                left join categoria_producto c on c.categoria_id = p.categoria_id
                left join (select
                                sum(dp.detproduccion_cantidad) as cantidad, dp.producto_id as prod_id
                           from detalle_produccion dp
                           left join produccion pr on dp.`produccion_id` = pr.produccion_id
                           where `dp`.`estado_id` = 34
                           group by dp.`producto_id`) as d_prod on p.producto_id = d_prod.prod_id
                left join (select
                	         sum(dc.detallecomp_cantidad) as cantidad_compra, dc.producto_id as producto_idcompra
                           from detalle_compra dc
                           left join compra c on dc.`compra_id` = c.compra_id
                           where
                           	c.compra_fecha >= '".$desde."' and 
               			c.compra_fecha <= '".$hasta."'
                           group by dc.`producto_id`) as d_compradetalle on p.producto_id = d_compradetalle.producto_idcompra
                left join (select sum(d.detalleven_cantidad) as cantidad_mantenimiento, c.`cliente_nombre`, d.producto_id as dv_prodid,
                                  sum(d.detalleven_total) as total_ventamantenimiento
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'MANTENIMIENTO' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventam on p.producto_id = `d_ventam`.dv_prodid
                left join (select sum(d.detalleven_cantidad) as cantidad_proyecto, c.`cliente_nombre`, d.producto_id as dv_prodidproy,
                                  sum(d.detalleven_total) as total_ventaproyecto
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'PROYECTOS' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventap on p.producto_id = d_ventap.dv_prodidproy
                left join (select sum(d.detalleven_cantidad) as cantidad_parque, c.`cliente_nombre`, d.producto_id as producto_idparque,
                                  sum(d.detalleven_total) as total_ventaparque
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'PARQUES' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventaparque on p.producto_id = d_ventaparque.producto_idparque
                left join (select sum(d.detalleven_cantidad) as cantidad_venta, c.`cliente_nombre`, d.producto_id as producto_idventa,
                                  sum(d.detalleven_total) as total_ventavarios
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where not
                                  (c.cliente_nombre = 'MANTENIMIENTO' or
                                  c.cliente_nombre = 'PROYECTOS' or
                                  c.cliente_nombre = 'PARQUES' or
                                  c.cliente_nombre = 'MORTANDAD' or
                                  c.cliente_nombre = 'PARQUE ESCUELA') and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventaventas on p.producto_id = d_ventaventas.producto_idventa
                left join (select sum(d.detalleven_cantidad) as cantidad_mortandad, c.`cliente_nombre`, d.producto_id as producto_idmortandad,
                                  sum(d.detalleven_total) as total_ventamortandad
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'MORTANDAD' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventamortandad on p.producto_id = d_ventamortandad.producto_idmortandad
                left join (select sum(d.detalleven_cantidad) as cantidad_traspaso, c.`cliente_nombre`, d.producto_id as producto_idtraspaso,
                                  sum(d.detalleven_total) as total_ventatraspaso
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'PARQUE ESCUELA' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventatraspaso on p.producto_id = d_ventatraspaso.producto_idtraspaso
                left join (select sum(per.perdida_cantidad) as cantidad_perdida, dp.producto_id as producto_idperdida
                           from `perdida` per
                           left join `detalle_produccion` dp on per.detproduccion_id = dp.`detproduccion_id`
                           left join producto pro on dp.`producto_id` = `pro`.`producto_id`
                           group by dp.producto_id) as d_produccionperdida on p.producto_id = d_produccionperdida.producto_idperdida
                left join (select
                                sum(dc.detallecomp_cantidad) as cantidad_compraant, dc.producto_id as producto_idcompraant
                           from detalle_compra dc
                           left join compra c on dc.`compra_id` = c.compra_id
                           where
                                c.compra_fecha >= '".$inicio."' and 
                                c.compra_fecha < '".$desde."'
                           group by dc.`producto_id`) as d_compradetalleant on p.producto_id = d_compradetalleant.producto_idcompraant
                left join (select sum(d.detalleven_cantidad) as cantidad_ventaant, d.producto_id as producto_idventaant
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           where
                                v.venta_fecha >= '".$inicio."' and 
                                v.venta_fecha < '".$desde."'
                           group by d.producto_id) as d_ventadetalleant on p.producto_id = `d_ventadetalleant`.producto_idventaant                
                where p.estado_id = 1
                    and p.producto_nombre like '%".$parametro."%' or p.producto_codigobarra like '%".$parametro."%' or p.producto_codigo like '%".$parametro."%'
                group by p.categoria_id, p.producto_id order by c.categoria_nombre, p.producto_nombre asc";
        
        $producto = $this->db->query($sql)->result_array();
        return $producto;

    }
    /*
     * Get inventariofisico valorado +produccion de Parque escuela
     */
    function getinventario_fvaloradope($desde, $hasta)
    {
        $inicio ='1900-01-01';
        $sql = "select p.*,c.categoria_nombre, d_prod.cantidad, d_compradetalle.cantidad_compra,
                       `d_ventam`.cantidad_mantenimiento, d_ventam.total_ventamantenimiento,
                       d_ventap.cantidad_proyecto, d_ventap.total_ventaproyecto,
		       d_ventaparque.cantidad_parque, d_ventaparque.total_ventaparque,
                       d_ventaventas.cantidad_venta, d_ventaventas.total_ventavarios,
                       d_ventatraspaso.cantidad_traspaso, d_ventatraspaso.total_ventatraspaso,
                       d_ventamortandad.cantidad_mortandad, d_ventamortandad.total_ventamortandad,
                       d_produccionperdida.cantidad_perdida,
                       d_compradetalleant.cantidad_compraant, d_ventadetalleant.cantidad_ventaant,
                       d_ventacambioporte.cantidad_cambioporte, d_ventacambioporte.total_ventacambioporte
                FROM inventario p
                left join categoria_producto c on c.categoria_id = p.categoria_id
                left join (select
                                sum(dp.detproduccion_cantidad) as cantidad, dp.producto_id as prod_id
                           from detalle_produccion dp
                           left join produccion pr on dp.`produccion_id` = pr.produccion_id
                           where `dp`.`estado_id` = 34
                           group by dp.`producto_id`) as d_prod on p.producto_id = d_prod.prod_id
                left join (select
                	         sum(dc.detallecomp_cantidad) as cantidad_compra, dc.producto_id as producto_idcompra
                           from detalle_compra dc
                           left join compra c on dc.`compra_id` = c.compra_id
                           where
                           	c.compra_fecha >= '".$desde."' and 
               			c.compra_fecha <= '".$hasta."'
                           group by dc.`producto_id`) as d_compradetalle on p.producto_id = d_compradetalle.producto_idcompra
                left join (select sum(d.detalleven_cantidad) as cantidad_mantenimiento, c.`cliente_nombre`, d.producto_id as dv_prodid,
                                  sum(d.detalleven_total) as total_ventamantenimiento
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'MANTENIMIENTO' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventam on p.producto_id = `d_ventam`.dv_prodid
                left join (select sum(d.detalleven_cantidad) as cantidad_proyecto, c.`cliente_nombre`, d.producto_id as dv_prodidproy,
                                  sum(d.detalleven_total) as total_ventaproyecto
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'PROYECTOS' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventap on p.producto_id = d_ventap.dv_prodidproy
                left join (select sum(d.detalleven_cantidad) as cantidad_parque, c.`cliente_nombre`, d.producto_id as producto_idparque,
                                  sum(d.detalleven_total) as total_ventaparque
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'PARQUES' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventaparque on p.producto_id = d_ventaparque.producto_idparque
                left join (select sum(d.detalleven_cantidad) as cantidad_venta, c.`cliente_nombre`, d.producto_id as producto_idventa,
                                  sum(d.detalleven_total) as total_ventavarios
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where not
                                  (c.cliente_nombre = 'MANTENIMIENTO' or
                                  c.cliente_nombre = 'PROYECTOS' or
                                  c.cliente_nombre = 'PARQUES' or
                                  c.cliente_nombre = 'MORTANDAD' or
                                  c.cliente_nombre = 'SALIDA EMAVRA') and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventaventas on p.producto_id = d_ventaventas.producto_idventa
                left join (select sum(d.detalleven_cantidad) as cantidad_mortandad, c.`cliente_nombre`, d.producto_id as producto_idmortandad,
                                  sum(d.detalleven_total) as total_ventamortandad
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'MORTANDAD' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventamortandad on p.producto_id = d_ventamortandad.producto_idmortandad
                left join (select sum(d.detalleven_cantidad) as cantidad_cambioporte, c.`cliente_nombre`, d.producto_id as producto_idcambioporte,
                                  sum(d.detalleven_total) as total_ventacambioporte
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'CAMBIO DE PORTE' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventacambioporte on p.producto_id = d_ventacambioporte.producto_idcambioporte
                left join (select sum(d.detalleven_cantidad) as cantidad_traspaso, c.`cliente_nombre`, d.producto_id as producto_idtraspaso,
                                  sum(d.detalleven_total) as total_ventatraspaso
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'SALIDA EMAVRA' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventatraspaso on p.producto_id = d_ventatraspaso.producto_idtraspaso
                left join (select sum(per.perdida_cantidad) as cantidad_perdida, dp.producto_id as producto_idperdida
                           from `perdida` per
                           left join `detalle_produccion` dp on per.detproduccion_id = dp.`detproduccion_id`
                           left join producto pro on dp.`producto_id` = `pro`.`producto_id`
                           group by dp.producto_id) as d_produccionperdida on p.producto_id = d_produccionperdida.producto_idperdida
                left join (select
                                sum(dc.detallecomp_cantidad) as cantidad_compraant, dc.producto_id as producto_idcompraant
                           from detalle_compra dc
                           left join compra c on dc.`compra_id` = c.compra_id
                           where
                                c.compra_fecha >= '".$inicio."' and 
                                c.compra_fecha < '".$desde."'
                           group by dc.`producto_id`) as d_compradetalleant on p.producto_id = d_compradetalleant.producto_idcompraant
                left join (select sum(d.detalleven_cantidad) as cantidad_ventaant, d.producto_id as producto_idventaant
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           where
                                v.venta_fecha >= '".$inicio."' and 
                                v.venta_fecha < '".$desde."'
                           group by d.producto_id) as d_ventadetalleant on p.producto_id = `d_ventadetalleant`.producto_idventaant
                where p.estado_id = 1
                group by p.categoria_id, p.producto_id order by c.categoria_nombre, p.producto_nombre asc";
        $producto = $this->db->query($sql)->result_array();
        return $producto;
    }
    
    function get_inventario_fvaloradoparametrope($desde, $hasta, $parametro)
    {
        $inicio ='1900-01-01';
        $sql = "select p.*,c.categoria_nombre, d_prod.cantidad, d_compradetalle.cantidad_compra,
                       `d_ventam`.cantidad_mantenimiento, d_ventam.total_ventamantenimiento,
                       d_ventap.cantidad_proyecto, d_ventap.total_ventaproyecto,
		       d_ventaparque.cantidad_parque, d_ventaparque.total_ventaparque,
                       d_ventaventas.cantidad_venta, d_ventaventas.total_ventavarios,
                       d_ventatraspaso.cantidad_traspaso, d_ventatraspaso.total_ventatraspaso,
                       d_ventamortandad.cantidad_mortandad, d_ventamortandad.total_ventamortandad,
                       d_produccionperdida.cantidad_perdida,
                       d_compradetalleant.cantidad_compraant, d_ventadetalleant.cantidad_ventaant,
                       d_ventacambioporte.cantidad_cambioporte, d_ventacambioporte.total_ventacambioporte
                FROM inventario p
                left join categoria_producto c on c.categoria_id = p.categoria_id
                left join (select
                                sum(dp.detproduccion_cantidad) as cantidad, dp.producto_id as prod_id
                           from detalle_produccion dp
                           left join produccion pr on dp.`produccion_id` = pr.produccion_id
                           where `dp`.`estado_id` = 34
                           group by dp.`producto_id`) as d_prod on p.producto_id = d_prod.prod_id
                left join (select
                	         sum(dc.detallecomp_cantidad) as cantidad_compra, dc.producto_id as producto_idcompra
                           from detalle_compra dc
                           left join compra c on dc.`compra_id` = c.compra_id
                           where
                           	c.compra_fecha >= '".$desde."' and 
               			c.compra_fecha <= '".$hasta."'
                           group by dc.`producto_id`) as d_compradetalle on p.producto_id = d_compradetalle.producto_idcompra
                left join (select sum(d.detalleven_cantidad) as cantidad_mantenimiento, c.`cliente_nombre`, d.producto_id as dv_prodid,
                                  sum(d.detalleven_total) as total_ventamantenimiento
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'MANTENIMIENTO' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventam on p.producto_id = `d_ventam`.dv_prodid
                left join (select sum(d.detalleven_cantidad) as cantidad_proyecto, c.`cliente_nombre`, d.producto_id as dv_prodidproy,
                                  sum(d.detalleven_total) as total_ventaproyecto
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'PROYECTOS' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventap on p.producto_id = d_ventap.dv_prodidproy
                left join (select sum(d.detalleven_cantidad) as cantidad_parque, c.`cliente_nombre`, d.producto_id as producto_idparque,
                                  sum(d.detalleven_total) as total_ventaparque
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'PARQUES' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventaparque on p.producto_id = d_ventaparque.producto_idparque
                left join (select sum(d.detalleven_cantidad) as cantidad_venta, c.`cliente_nombre`, d.producto_id as producto_idventa,
                                  sum(d.detalleven_total) as total_ventavarios
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where not
                                  (c.cliente_nombre = 'MANTENIMIENTO' or
                                  c.cliente_nombre = 'PROYECTOS' or
                                  c.cliente_nombre = 'PARQUES' or
                                  c.cliente_nombre = 'MORTANDAD' or
                                  c.cliente_nombre = 'SALIDA EMAVRA') and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventaventas on p.producto_id = d_ventaventas.producto_idventa
                left join (select sum(d.detalleven_cantidad) as cantidad_mortandad, c.`cliente_nombre`, d.producto_id as producto_idmortandad,
                                  sum(d.detalleven_total) as total_ventamortandad
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'MORTANDAD' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventamortandad on p.producto_id = d_ventamortandad.producto_idmortandad
                left join (select sum(d.detalleven_cantidad) as cantidad_cambioporte, c.`cliente_nombre`, d.producto_id as producto_idcambioporte,
                                  sum(d.detalleven_total) as total_ventacambioporte
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'CAMBIO DE PORTE' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventacambioporte on p.producto_id = d_ventacambioporte.producto_idcambioporte
                left join (select sum(d.detalleven_cantidad) as cantidad_traspaso, c.`cliente_nombre`, d.producto_id as producto_idtraspaso,
                                  sum(d.detalleven_total) as total_ventatraspaso
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           left join cliente c on v.cliente_id = c.cliente_id
                           left join producto pro on d.producto_id = `pro`.`producto_id`
                           where c.cliente_nombre  = 'SALIDA EMAVRA' and
                                v.venta_fecha >= '".$desde."' and 
                                v.venta_fecha <= '".$hasta."'
                           group by d.producto_id) as d_ventatraspaso on p.producto_id = d_ventatraspaso.producto_idtraspaso
                left join (select sum(per.perdida_cantidad) as cantidad_perdida, dp.producto_id as producto_idperdida
                           from `perdida` per
                           left join `detalle_produccion` dp on per.detproduccion_id = dp.`detproduccion_id`
                           left join producto pro on dp.`producto_id` = `pro`.`producto_id`
                           group by dp.producto_id) as d_produccionperdida on p.producto_id = d_produccionperdida.producto_idperdida
                left join (select
                                sum(dc.detallecomp_cantidad) as cantidad_compraant, dc.producto_id as producto_idcompraant
                           from detalle_compra dc
                           left join compra c on dc.`compra_id` = c.compra_id
                           where
                                c.compra_fecha >= '".$inicio."' and 
                                c.compra_fecha < '".$desde."'
                           group by dc.`producto_id`) as d_compradetalleant on p.producto_id = d_compradetalleant.producto_idcompraant
                left join (select sum(d.detalleven_cantidad) as cantidad_ventaant, d.producto_id as producto_idventaant
                           from `detalle_venta` d
                           left join venta v on d.venta_id = v.venta_id
                           where
                                v.venta_fecha >= '".$inicio."' and 
                                v.venta_fecha < '".$desde."'
                           group by d.producto_id) as d_ventadetalleant on p.producto_id = `d_ventadetalleant`.producto_idventaant                
                where p.estado_id = 1
                    and p.producto_nombre like '%".$parametro."%' or p.producto_codigobarra like '%".$parametro."%' or p.producto_codigo like '%".$parametro."%'
                group by p.categoria_id, p.producto_id order by c.categoria_nombre, p.producto_nombre asc";
        
        $producto = $this->db->query($sql)->result_array();
        return $producto;
    }
}
